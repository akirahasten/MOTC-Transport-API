{"version":3,"sources":["pages/ScenicSpot.js","pages/NotFoundPage.js","pages/City.js","component/Maincontain.js","component/MyNavbar.js","App.js","reportWebVitals.js","index.js"],"names":["ScenicSpot","props","useState","rows","setRows","n","a","url","request","Request","method","fetch","response","json","data","console","log","prevState","options","root","rootMargin","threshold","callback","entries","observer","forEach","entry","isIntersecting","fetchdata","useEffect","observe_target","document","querySelector","IntersectionObserver","observe","ScienicDisplay","map","value","i","className","src","Picture","PictureUrl1","alt","Name","DescriptionDetail","p_price","id","NotFoundPage","City","city","useParams","length","fetchcity","Position","PositionLat","PositionLon","Maincontain","children","withRouter","Navbar","collapseOnSelect","expand","variant","Brand","as","NavLink","to","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Divider","title","index","href","App","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.412d41af.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nfunction ScenicSpot(props) {\r\n  const [rows, setRows] = useState([])\r\n  let n = 1\r\n\r\n  async function fetchdata() {\r\n    const url = `https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot?$top=30&$skip=${\r\n      30 * (n - 1)\r\n    }`\r\n    const request = new Request(url, {\r\n      method: 'GET',\r\n    })\r\n    const response = await fetch(request)\r\n    const data = await response.json()\r\n    console.log('回傳資料 : ', data)\r\n    // setRows(data)\r\n    setRows((prevState) => {\r\n      return [...prevState, ...data]\r\n    })\r\n    n = n + 1\r\n  }\r\n  let options = {\r\n    root: null,\r\n    rootMargin: '0px',\r\n    threshold: 1,\r\n  }\r\n  let callback = (entries, observer) => {\r\n    // entries 能拿到所有目標元素進出(intersect)變化的資訊\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        console.log('n :', n)\r\n        fetchdata()\r\n      } else {\r\n        // 只在目標元素離開 viewport 時執行這裡的工作\r\n      }\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    n = 1\r\n    // fetchdata()\r\n    const observe_target = document.querySelector('#TARGET_ELEMENT')\r\n\r\n    let observer = new IntersectionObserver(callback, options)\r\n    observer.observe(observe_target)\r\n  }, [])\r\n  let ScienicDisplay = (\r\n    <>\r\n      {rows.map((value, i) => (\r\n        <>\r\n          <div key={i} className={`col-xl-4 col-lg-5 col-md-6 `}>\r\n            <div className=\"product  fish-card w-100 position-relative\">\r\n              <div className=\"fish-img-box w-100\">\r\n                <img\r\n                  // src={\r\n                  //   Object.keys(value.Picture).length > 0\r\n                  //     ? `${value.Picture.PictureUrl1}`\r\n                  //     : 'imgnotfound.png'\r\n                  src={\r\n                    value.Picture.PictureUrl1\r\n                      ? `${value.Picture.PictureUrl1}`\r\n                      : 'http://localhost:3000/imgnotfound.png'\r\n                  }\r\n                  className=\"fish-product-img\"\r\n                  alt={`${value.Name}` + `圖片`}\r\n                />\r\n              </div>\r\n              <div className=\"fish-card-body w-100\">\r\n                <h5 className=\"fish-card-title\">{value.Name}</h5>\r\n                <p className=\"fish-card-text\">{value.DescriptionDetail}</p>\r\n                <hr className=\"fish-product-hr\" />\r\n                <div className=\"fish-product-price mb-1\">{value.p_price}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ))}\r\n      <div id=\"TARGET_ELEMENT\"></div>\r\n    </>\r\n  )\r\n  useEffect(() => {\r\n    console.log('rows : ', rows)\r\n  }, [rows])\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-wrap\">{ScienicDisplay}</div>\r\n    </>\r\n  )\r\n}\r\nexport default ScenicSpot\r\n","function NotFoundPage(props) {\r\n  return (\r\n    <>\r\n      <h1>404 找不到網頁</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage\r\n","import { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nfunction City(props) {\r\n  const [rows, setRows] = useState([])\r\n  let n = 1\r\n  let { city } = useParams()\r\n\r\n  async function fetchcity() {\r\n    const url =\r\n      `https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot/${city}` +\r\n      `?$top=${30}&$skip=${30 * (n - 1)}`\r\n    const request = new Request(url, {\r\n      method: 'GET',\r\n    })\r\n    const response = await fetch(request)\r\n    const data = await response.json()\r\n    console.log('回傳資料 : ', data)\r\n    if (data.length >= 30) {\r\n      setRows((prevState) => {\r\n        return [...prevState, ...data]\r\n      })\r\n      n = n + 1\r\n    } else {\r\n      setRows(data)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const observe_target = document.querySelector('#TARGET_ELEMENT')\r\n    let options = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.75,\r\n    }\r\n    let callback = (entries, observer) => {\r\n      // entries 能拿到所有目標元素進出(intersect)變化的資訊\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          console.log('n :', n)\r\n          fetchcity()\r\n        } else {\r\n          // 只在目標元素離開 viewport 時執行這裡的工作\r\n        }\r\n      })\r\n    }\r\n    let observer = new IntersectionObserver(callback, options)\r\n    observer.observe(observe_target)\r\n  }, [])\r\n  useEffect(() => {\r\n    console.log('rows : ', rows)\r\n  }, [rows])\r\n  let ScienicDisplay = (\r\n    <>\r\n      {rows.map((value, i) => (\r\n        <>\r\n          <div key={i} className={`col-xl-4 col-lg-5 col-md-6 `}>\r\n            <div className=\"product  fish-card w-100 position-relative\">\r\n              <div className=\"fish-img-box w-100\">\r\n                <img\r\n                  src={\r\n                    value.Picture.PictureUrl1\r\n                      ? `${value.Picture.PictureUrl1}`\r\n                      : '/imgnotfound.png'\r\n                  }\r\n                  className=\"fish-product-img\"\r\n                  alt={`${value.Name}` + `圖片`}\r\n                />\r\n              </div>\r\n              <div className=\"fish-card-body w-100\">\r\n                <h5 className=\"fish-card-title\">\r\n                  {value.City}－{value.Name}\r\n                </h5>\r\n                <p className=\"fish-card-text\">{value.DescriptionDetail}</p>\r\n                <hr className=\"fish-product-hr\" />\r\n                <div className=\"fish-product-text mb-1\">\r\n                  經緯度: {value.Position.PositionLat},\r\n                  {value.Position.PositionLon}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ))}\r\n      <div id=\"TARGET_ELEMENT\"></div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {/* <img src=\"http://localhost:3000/logo192.png\" alt=\"\" className=\"bg-img\" /> */}\r\n      <div className=\"d-flex flex-wrap\">{ScienicDisplay}</div>\r\n    </>\r\n  )\r\n}\r\nexport default City\r\n","function Maincontain(props) {\r\n  return (\r\n    <>\r\n      <div className=\"container\">{props.children}</div>\r\n    </>\r\n  )\r\n}\r\nexport default Maincontain\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\n// 要使用能有active css效果的NavLink元件\r\n\r\nimport { NavLink, withRouter, Link } from 'react-router-dom'\r\nimport '../styles/navbar.scss'\r\n\r\nfunction MyNavbar(props) {\r\n  // const { changecity, setChangecity } = props\r\n\r\n  const city = [\r\n    'Taipei',\r\n    'NewTaipei',\r\n    'Taoyuan',\r\n    'Taichung',\r\n    'Tainan',\r\n    'Kaohsiung',\r\n    'Keelung',\r\n    'Hsinchu',\r\n    'HsinchuCounty',\r\n    'MiaoliCounty',\r\n    'ChanghuaCounty',\r\n    'NantouCounty',\r\n    'YunlinCounty',\r\n    'ChiayiCounty',\r\n    'Chiayi',\r\n    'PingtungCounty',\r\n    'YilanCounty',\r\n    'HualienCounty',\r\n    'TaitungCounty',\r\n    'KinmenCounty',\r\n    'PenghuCounty',\r\n    'LienchiangCounty',\r\n  ]\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"alex-navbarHeight\"\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        variant=\"dark\"\r\n        id=\"navbar\"\r\n      >\r\n        <Navbar.Brand as={NavLink} to=\"/\" className=\"nav-left\"></Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto \">\r\n            <Nav.Link as={NavLink} to=\"/scenicSpot\">\r\n              全部縣市\r\n            </Nav.Link>\r\n\r\n            <Nav>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown\r\n                title=\"各縣市景點\"\r\n                id=\"nav-member\"\r\n                className=\"nav-member-link \"\r\n              >\r\n                {city.map((value, index) => (\r\n                  <Nav.Link href={`/scenicSpot/${city[index]}`}>\r\n                    {`${city[index]}`}\r\n                    {/* <NavDropdown.Item\r\n                      // as={NavLink}\r\n                      className=\"nav-ul \"\r\n                     }\r\n                    >\r\n                    </NavDropdown.Item> */}\r\n                  </Nav.Link>\r\n                ))}\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(MyNavbar)\r\n","import { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport React, { useState } from 'react'\n//pages\nimport ScenicSpot from './pages/ScenicSpot'\nimport NotFoundPage from './pages/NotFoundPage'\nimport City from './pages/City'\n\n//components\nimport Maincontain from './component/Maincontain'\nimport MyNavbar from './component/MyNavbar'\n\nfunction App() {\n  // const [changecity, setChangecity] = useState(false)\n\n  return (\n    <Router basename={process.env.PUBLIC_URL + '/'}>\n      <>\n        <MyNavbar />\n        <Maincontain>\n          <Switch>\n            <Route path=\"/scenicSpot/:city\">\n              <City />\n            </Route>\n            <Route path=\"/scenicSpot\">\n              <ScenicSpot />\n            </Route>\n\n            <Route path=\"*\">\n              <NotFoundPage />\n            </Route>\n          </Switch>\n        </Maincontain>\n      </>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}